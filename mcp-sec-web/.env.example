# MCP Security Scanner Environment Variables
# Copy this file to .env and fill in your actual values

# =============================================================================
# OpenAI Configuration
# =============================================================================

# Your OpenAI API key for semantic analysis
# Get one at: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# Alternative: Azure OpenAI endpoint and key
# AZURE_OPENAI_API_KEY=your_azure_openai_api_key_here
# AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/

# OpenAI model to use for semantic analysis
# OPENAI_MODEL=gpt-4-turbo-preview

# =============================================================================
# Security Thresholds
# =============================================================================

# Similarity threshold for typosquatting detection (0.0 to 1.0)
# MCP_SEC_TYPO_SIMILARITY_THRESHOLD=0.92

# Maximum acceptable risk score for CI/CD (0.0 to 10.0)
# MCP_SEC_MAX_RISK_SCORE=7.0

# =============================================================================
# Docker Sandbox Configuration
# =============================================================================

# Docker image to use for sandboxed execution
# MCP_SEC_SANDBOX_IMAGE=alpine:latest

# Timeout for sandboxed operations (seconds)
# MCP_SEC_SANDBOX_TIMEOUT_SECONDS=30

# Memory limit for sandbox containers
# MCP_SEC_SANDBOX_MEMORY_LIMIT=512m

# CPU limit for sandbox containers
# MCP_SEC_SANDBOX_CPU_LIMIT=0.5

# =============================================================================
# Development Settings
# =============================================================================

# Enable test mode (disables actual API calls)
# MCP_SEC_TEST_MODE=false

# =============================================================================
# Web Application Settings
# =============================================================================

# Backend API URL (for the web interface)
# VITE_API_URL=http://localhost:8000

# Frontend development server port
# VITE_PORT=8082

# =============================================================================
# Backend API Settings
# =============================================================================

# Backend server port
# BACKEND_PORT=8000

# Backend server host
# BACKEND_HOST=0.0.0.0

# Database paths (auto-configured, but can be overridden)
# MCP_SEC_TRACKING_DB=~/.mcp-sec/tracking.db
# MCP_SEC_APPROVALS_DB=~/.mcp-sec/approvals.db

# =============================================================================
# CORS Settings (for web interface)
# =============================================================================

# Allowed origins for CORS (comma-separated)
# CORS_ALLOWED_ORIGINS=http://localhost:8082,http://localhost:3000,http://localhost:5173

# =============================================================================
# Reporting Configuration
# =============================================================================

# SARIF version for security reports
# MCP_SEC_SARIF_VERSION=2.1.0

# =============================================================================
# Network Configuration
# =============================================================================

# Allowed hosts for sandbox network access (comma-separated)
# MCP_SEC_ALLOWED_HOSTS=vulndb.example.com,api.openai.com

# =============================================================================
# Known MCP Servers (for typosquatting detection)
# =============================================================================

# Comma-separated list of known good MCP server names
# MCP_SEC_KNOWN_SERVERS=filesystem,github,postgres,sqlite,slack,google-drive,memory,puppeteer,brave-search,fetch
